% The code generated by Jinho Lee
% 2017. June

%NC vs RPPA

clear all;
close all;

% 19 antibodies
% ab = {'ERK1/2', 'p-cMET', 'p-EGFR', 'Bcl-2', 'p-S6', 'HER2', 'Cyclin B1', 'p-HER2', 'BIM', 'PR', 'AKT', 'p-MEK1', 'EGFR', 'p-p38', 'p-AKT', 'GATA3', 'p-ERK1/2', 'PTEN', 'ER'};

% 18 antibodies (without ERK1/2)

 ab = {'p-cMET', 'p-EGFR', 'Bcl-2', 'p-S6', 'HER2', 'Cyclin B1', 'p-HER2', 'BIM', 'PR', 'AKT', 'p-MEK1', 'EGFR', 'p-p38', 'p-AKT', 'GATA3', 'p-ERK1/2', 'PTEN', 'ER'};    

% ATTENTION! PTEN tag changed
% ab = {'p-cMET', 'p-EGFR', 'Bcl-2', 'p-S6', 'HER2', 'Cyclin B1', 'p-HER2', 'BIM', 'PR', 'AKT', 'p-MEK1', 'EGFR', 'PTEN', 'p-p38', 'p-AKT', 'GATA3', 'p-ERK1/2', 'ER'};   



a=[-0.6	-0.6	-0.7	-0.7	-0.3	0.8	0.5
-0.7	-0.8	-0.6	1.0	-0.8	-0.4	0.5
-0.5	-0.8	2.4	-0.9	-0.4	-0.4	0.3
2.7	0.0	-3.1	-1.2	0.6	1.7	0.8
-0.6	-0.8	-0.8	2.0	-0.7	-0.6	0.1
-1.4	0.4	-0.3	0.5	-0.1	-0.1	-0.9
-1.2	-1.2	-1.4	4.1	-1.9	-0.8	0.0
1.5	-1.1	0.7	-0.2	-0.9	-0.3	0.0
0.4	3.5	1.4	-1.4	-1.0	-0.9	-0.1
0.3	0.6	1.7	0.6	0.7	1.2	-0.9
-1.5	-1.0	-1.4	-0.5	3.1	0.2	-0.5
-1.5	-1.7	-1.7	-0.7	0.0	-0.2	2.0
-0.4	-0.7	-0.1	-0.7	1.2	-0.1	0.4
1.6	0.5	-2.6	0.9	0.0	0.3	-0.1
2.0	2.7	4.1	-1.6	-1.3	-0.7	-0.8
-1.4	0.2	-1.6	-0.1	2.1	1.1	0.0
0.2	1.0	1.2	-0.2	1.1	0.1	-1.3
1.0	1.0	2.8	-0.7	-0.8	-0.7	-0.1
];




b= [-0.2	-0.7	-0.1	-0.3	0.3	0.4	-0.3
-0.3	-0.9	-0.2	-0.1	0.1	0.3	0.8
-0.4	-0.6	1.0	-0.2	0.0	0.1	-0.3
2.2	-0.3	-3.1	-1.8	-0.3	1.7	1.7
0.1	-0.9	-0.3	1.0	0.2	-0.2	-0.4
-1.9	0.7	-0.3	0.6	-0.7	-0.7	-0.3
-0.3	-1.1	-1.0	2.2	-0.4	-0.1	0.0
1.6	-1.3	1.5	0.6	-0.8	-0.8	-0.3
0.3	3.5	1.2	-1.0	-0.2	-0.6	-0.9
-0.4	0.1	0.7	0.1	-0.3	0.4	0.3
-0.2	-0.6	-0.8	-0.3	1.2	0.2	0.3
-0.6	-1.1	-0.7	-0.4	0.2	0.1	2.3
-0.8	-0.5	-0.3	-0.5	0.7	0.0	-0.3
0.9	0.3	-2.1	0.7	-0.4	-0.2	0.6
1.0	2.2	3.2	-0.9	-1.1	-0.7	-0.4
-1.0	-0.1	-0.8	0.2	1.4	0.4	-0.5
-0.2	0.9	0.8	-0.2	0.4	-0.2	-1.4
0.4	0.1	0.9	-0.6	0.3	0.3	0.0
];



% we have 18 antibody targets to comapre
for i=1:18
   
x = a(i,:);
y = b(i,:);
        
[r,p]=corr(a(i,:)',b(i,:)','Type', 'Spearman');
[rr,pp]=corr(a(i,:)',b(i,:)','Type', 'Pearson');


%Spearman for each antibody
rho(i) = r;

%Pearson for each antibody
cor(i) = rr;


lin = polyfit(x,y,1);
yfit = lin(1)*x+lin(2);
hold on;

subplot(5,4,i);

group = [1,2,3,4,5,6,7];

   gscatter(a(i,:),b(i,:),group,[],[],20);

   if (max(a(i,:))>5 || max(b(i,:))>5)
   
   xlim([-5 10]);
   ylim([-5 10]);
   
   elseif (max(a(i,:))>2 || max(b(i,:))>2)
            
   xlim([-5 5]);
   ylim([-5 5]);
   
   else
   xlim([-2 2]);
   ylim([-2 2]); 
   
   end
   

   
hold on;  
plot(x,yfit,'r-.');


 if (i == 18)
 legend({'CAMA-1','T47D','MCF7','SKBr3','MDA-MB-231','OVCA433','MDA-MB-468'},'FontSize',8,'Location','NE')

 else
 legend('off')
 
 end


%title(['rho / Pearson =' sprintf('%.2f',rho(i)) ' / ' sprintf('%.2f',cor(i))]);
title(['{\itr} =' sprintf('%.2f',cor(i))],'FontSize',12,'FontWeight','bold');
ylabel(ab(i),'FontSize',12,'FontWeight','bold');

end



% 8 cell line
cell = {'CAMA-1','T47D','MCF7','SKBR3','OVCA433','MDA231','MDA468'};

figure

for j = 1:7

x2 = a(:,j);
y2 = b(:,j);

[r2,p2]=corr(a(:,j),b(:,j),'Type', 'Spearman');
[rr2,pp2]=corr(a(:,j),b(:,j),'Type', 'Pearson');


%Spearman for each antibody
rho2(j) = r2;

%Pearson for each antibody
cor2(j) = rr2;


lin2 = polyfit(x2,y2,1);
yfit2 = lin2(1)*x2+lin2(2);
hold on;


subplot(3,3,j);

scatter(a(:,j), b(:,j),36,'filled','MarkerEdgeColor','r',...
                                   'MarkerFaceColor','b',...
                                   'LineWidth',1.0);

    if (max(a(:,j))>5 || max(b(:,j))>5)
   
   xlim([-5 10]);
   ylim([-5 10]);
   
   else
       
   xlim([-5 5]);
   ylim([-5 5]);
   
   end                           
                               
hold on;
plot(x2,yfit2,'g-.');

title(['{\itr} =' sprintf('%.2f',cor2(j))],'FontSize',12,'FontWeight','bold');
ylabel(cell(j),'FontSize',12,'FontWeight','bold');   


end




% Spearman
disp('Spearman correlation coefficient') ; rank_corr(a,b)

% Pearson
disp('Pearson correlation coefficient') ; corrcoef(a,b)

figure
plot(a,b,'o')


 legend({'CAMA-1','T47D','MCF7','SKBR3','MDA-MB-231','OVCA433','MDA-MB-468'},'FontSize',8,'Location','NW')



hold on

[beta,S] = polyfit(a,b,1); %fit a first-order polynomial (i.e., line)

plot(a, beta(1)*a+beta(2),'r-','linewidth',1.5)

hold off

bigx=-5:0.01:5;

[ypred,yerr] = polyval(beta,bigx,S); %ypred is the prediction, yerr is the standard deviation

yupper = ypred + yerr;
ylower = ypred - yerr;

hold on

% facealpha controls transparency
patch([bigx fliplr(bigx)],[ylower fliplr(yupper)],'b','facealpha',0.1,...
    'edgecolor','none') 

hold off

 

% correlation matrix
 c = corr(a,a);
 d = corr(a',a');
 
figure
imagesc(c)
title ('Correlation Matrix - Cell line')
set(gca,'TickDir','out')
set(gca, 'XTickLabel', cell)
set(gca, 'YTickLabel', cell)
set(gca,'box','off')

figure
imagesc(d)
title('Correlation Matrix - Targets')
set(gca,'TickDir','out')
set(gca, 'xtick', 1:18)
set(gca, 'XTickLabel', ab)
xticklabel_rotate([],45,[],'Fontsize',12)
set(gca, 'ytick', 1:18)
set(gca, 'YTickLabel', ab)
set(gca,'box','off')

% "Linear regression confidence interval"

% creates two curves marking the 1 - ALPHA confidence interval for the
% regression line, given BETA coefficience (BETA(1) = intercept, BETA(2) = slope).
% This is the format of STATS.beta when using 
% STATS = REGSTATS(Y,X,'linear','beta');
% [TOP_INT, BOT_INT] = REGRESSION_LINE_CI(ALPHA,BETA,X,Y,N_PTS) defines the
%number of points at which the funnel plot is defined. Default = 100
%[TOP_INT, BOT_INT] = REGRESSION_LINE_CI(ALPHA,BETA,X,Y,N_PTS,XMIN,XMAX)
%defines the range of x values over which the funnel plot is defined


x = a(:);
y = b(:);

% 1-ALPHA confidence interval

% CI = 0.90; % 90% confidence
% CI = 0.95; % 95% confidence
CI = 0.99; % 99% confidence

alpha = 1 - CI; 


N = length(x);

% if(length(x) ~= length(y))
%     error(message('regression_line_ci:x and y size mismatch')); 
% end
 
x_min = min(x);
x_max = max(x);
y_min = min(y);
y_max = max(y);

n_pts = 100;

% if(nargin > 4)
%     n_pts = varargin{1};
% end
% if(nargin > 6)
%     x_min = varargin{2};
%     x_max = varargin{3};
% end

X = x_min:(x_max-x_min)/n_pts:x_max;
Y = ones(size(X))*beta(2) + beta(1)*X;

SE_y_cond_x = sum((y - beta(2)*ones(size(y))-beta(1)*x).^2)/(N-2);

SSX = (N-1)*var(x);

SE_Y = SE_y_cond_x*(ones(size(X))*(1/N + (mean(x)^2)/SSX) + (X.^2 - 2*mean(x)*X)/SSX);

Yoff = (2*finv(1-alpha,2,N-2)*SE_Y).^0.5;


% SE_b0 = SE_y_cond_x*sum(x.^2)/(N*SSX)
% sqrt(SE_b0)

top_int = Y + Yoff;
bot_int = Y - Yoff;

figure
scatter(x,y,'.');
hold on;

plot(X,Y,'red','LineWidth',2);
plot(X,top_int,'green--','LineWidth',2);
plot(X,bot_int,'green--','LineWidth',2);
hold on;
title('Linear Regression Confidence Interval')


% kmean clustering

rng default; % For reproducibility
Z = [x,y];

opts = statset('Display','final');
[idx,C] = kmeans(Z,3,'Distance','cityblock',...
    'Replicates',5,'Options',opts);

figure;
plot(Z(idx==1,1),Z(idx==1,2),'ro','MarkerSize',6)
hold on;
plot(Z(idx==2,1),Z(idx==2,2),'bo','MarkerSize',6)
hold on;
plot(Z(idx==3,1),Z(idx==3,2),'go','MarkerSize',6)

plot(C(:,1),C(:,2),'kx',...
     'MarkerSize',10,'LineWidth',3)

legend('Cluster 1','Cluster 2','Cluster 3',...
       'Location','NW')
title 'Cluster Assignments and Centroids'
hold off;

% kmean clustering(2)
x1 = min(Z(:,1)):0.01:max(Z(:,1));
x2 = min(Z(:,2)):0.01:max(Z(:,2));
[x1G,x2G] = meshgrid(x1,x2);
XGrid = [x1G(:),x2G(:)]; % Defines a fine grid on the plot

idx2Region = kmeans(XGrid,3,'MaxIter',1,'Start',C);

figure;
gscatter(XGrid(:,1),XGrid(:,2),idx2Region,...
    [0,0.75,0.75;0.75,0,0.75;0.75,0.75,0],'..');
hold on;
plot(Z(:,1),Z(:,2),'w*','MarkerSize',5);
title 'K-mean clustering';

legend('Region 1','Region 2','Region 3','Data','Location','SouthEast');
hold off;
